# This is a basic workflow to help you get started with Actions

name: Build and deploy webeditor app

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  setup-jvm-clojure:
    runs-on: ubuntu-latest
    steps:
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm-community'
          java-version: 21
      
      - name: Setup Clojure build tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 1.11.2.1446

      - name: Cache Clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('deps.edn') }}
          # key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          # key: cljdeps-${{ hashFiles('project.clj') }}
          # key: cljdeps-${{ hashFiles('build.boot') }}
          restore-keys: cljdeps-

  setup-nodejs-pnpm:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8.15.5
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

  build:
    runs-on: ubuntu-latest
    needs:
      - setup-jvm-clojure
      - setup-nodejs-pnpm

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm dependencies
        run: pnpm install

      - name: Build web editor app
        run: pnpm build:webeditor

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload app artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'

  deploy:
    runs-on: ubuntu-latest
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4