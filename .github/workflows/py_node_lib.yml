name: Build NodeJS lib for use in Python lib

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      # Setup JVM and Clojure tooling
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm-community'
          java-version: 21

      - name: Setup Clojure build tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 1.11.3.1463

      - name: Setup cache for Clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('deps.edn') }}
          # key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          # key: cljdeps-${{ hashFiles('project.clj') }}
          # key: cljdeps-${{ hashFiles('build.boot') }}
          restore-keys: cljdeps-

      # Setup Nodejs and pnpm
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install pnpm dependencies
        run: pnpm install

      - name: Setup SWI-Prolog
        uses: smucclaw/setup-swi-prolog@master
        with:
          swi-prolog-branch: devel
          swi-prolog-version: '9.3.6-4-gb42d8a568-nobleppa2'

      - name: Install SWI-Prolog dependencies
        run: |
          swipl -t " \
            pack_install(date_time, [interactive(false), test(false)]), \ 
            pack_install(clpBNR, [interactive(false), test(false)])"

      - name: Precompile SWI-Prolog files to qlf
        run: pnpm build:swipl-qlfs

      - name: Build NodeJS lib
        run: pnpm build:py-node-lib